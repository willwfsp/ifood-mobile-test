//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` public struct is generated and contains references to static resources.
public struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)
  
  static public func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` public struct is generated, and contains static references to 0 colors.
  public struct color {
    fileprivate init() {}
  }
  
  /// This `R.file` public struct is generated, and contains static references to 0 files.
  public struct file {
    fileprivate init() {}
  }
  
  /// This `R.font` public struct is generated, and contains static references to 0 fonts.
  public struct font {
    fileprivate init() {}
  }
  
  /// This `R.image` public struct is generated, and contains static references to 0 images.
  public struct image {
    fileprivate init() {}
  }
  
  /// This `R.nib` public struct is generated, and contains static references to 0 nibs.
  public struct nib {
    fileprivate init() {}
  }
  
  /// This `R.reuseIdentifier` public struct is generated, and contains static references to 1 reuse identifiers.
  public struct reuseIdentifier {
    /// Reuse identifier `UserTableViewCell`.
    static public let userTableViewCell: Rswift.ReuseIdentifier<Presentation.UserTableViewCell> = Rswift.ReuseIdentifier(identifier: "UserTableViewCell")
    
    fileprivate init() {}
  }
  
  /// This `R.segue` public struct is generated, and contains static references to 0 view controllers.
  public struct segue {
    fileprivate init() {}
  }
  
  /// This `R.storyboard` public struct is generated, and contains static references to 1 storyboards.
  public struct storyboard {
    /// Storyboard `Search`.
    static public let search = _R.storyboard.search()
    
    /// `UIStoryboard(name: "Search", bundle: ...)`
    static public func search(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.search)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.string` public struct is generated, and contains static references to 0 localization tables.
  public struct string {
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      try _R.validate()
    }
    
    fileprivate init() {}
  }
  
  fileprivate class Class {}
  
  fileprivate init() {}
}

public struct _R: Rswift.Validatable {
  static public func validate() throws {
    try storyboard.validate()
  }
  
  public struct nib {
    fileprivate init() {}
  }
  
  public struct storyboard: Rswift.Validatable {
    static public func validate() throws {
      try search.validate()
    }
    
    public struct search: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UIKit.UINavigationController
      
      let bundle = R.hostingBundle
      let name = "Search"
      let searchViewController = StoryboardViewControllerResource<Presentation.SearchViewController>(identifier: "SearchViewController")
      
      public func searchViewController(_: Void = ()) -> Presentation.SearchViewController? {
        return UIKit.UIStoryboard(resource: self).instantiateViewController(withResource: searchViewController)
      }
      
      static public func validate() throws {
        if _R.storyboard.search().searchViewController() == nil { throw Rswift.ValidationError(description:"[R.swift] ViewController with identifier 'searchViewController' could not be loaded from storyboard 'Search' as 'Presentation.SearchViewController'.") }
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate init() {}
}
